import { exec } from "child_process";
import { Compiler } from "dtscommands";
import { mkdirSync, writeFileSync } from "fs";

export async function BuildCommands(of: string) {
  mkdirSync(`./src/main/${of}/bundle`, { recursive: true });
  await Compiler(`./src/main/${of}`, of).then(
    async ({ exportedClasses, file }) => {
      if (
        file ===
        `// This file is auto-generated by dtscommands.
// Do not edit this file manually.



`
      ) {
        file = `export const exportedClasses = ${JSON.stringify(
          exportedClasses
        )}`;
      }

      writeFileSync(`./src/main/${of}/bundle/bundled.ts`, file);
      writeFileSync(
        `./src/main/${of}/bundle/classes.json`,
        JSON.stringify(exportedClasses)
      );
      let done = false;
      exec(
        `eslint ./src/main/${of}/bundle/bundled.ts --fix --ext .ts --ext .js`,
        (err, stdout, stderr) => {
          if (err) {
            return;
          }
          console.log(stdout);
          console.log(stderr);
          done = true;
        }
      );
      while (!done) {
        await new Promise((resolve) => setTimeout(resolve, 100));
        done = true;
      }
    }
  );
}
